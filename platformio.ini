; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

###############################################################################
[platformio]
default_envs = esp32cam_ai_thinker
#default_envs = esp32cam_espressif_esp_eye
#default_envs = esp32cam_espressif_esp32s2_cam_board
#default_envs = esp32cam_espressif_esp32s2_cam_header
#default_envs = esp32cam_espressif_esp32s3_cam_lcd
#default_envs = esp32cam_espressif_esp32s3_eye
#default_envs = esp32cam_freenove_wrover_kit
#default_envs = esp32cam_m5stack_camera_psram
#default_envs = esp32cam_m5stack_camera
#default_envs = esp32cam_m5stack_esp32cam
#default_envs = esp32cam_m5stack_unitcam
#default_envs = esp32cam_m5stack_unitcams3
#default_envs = esp32cam_m5stack_wide
#default_envs = esp32cam_m5stack_m5poecam_w
#default_envs = esp32cam_seeed_xiao_esp32s3_sense
#default_envs = esp32cam_ttgo_t_camera
#default_envs = esp32cam_ttgo_t_journal

[env]
platform = espressif32
framework = arduino
test_framework = unity

#upload_protocol = espota
#upload_port = 192.168.178.223
#upload_flags = --auth='ESP32CAM-RTSP'

# Partition scheme for OTA
#board_build.partitions = max_spiffs.csv

monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
#monitor_filters = log2file, time, default, esp32_exception_decoder
monitor_filters = esp32_exception_decoder

build_flags =
  -Ofast
  -D 'BOARD_NAME="${this.board}"'
  -D 'CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO'
  -D 'IOTWEBCONF_PASSWORD_LEN=64'

board_build.embed_txtfiles =
  html/index.min.html

lib_deps =
  prampec/IotWebConf@^3.2.1
  geeksville/Micro-RTSP@^0.1.6
  rzeldent/micro-moustache
  rzeldent/micro-timezonedb

[env:esp32cam_ai_thinker]
board = esp32cam_ai_thinker

[env:esp32cam_espressif_esp_eye]
board = esp32cam_espressif_esp_eye

[env:esp32cam_espressif_esp32s2_cam_board]
# Use board connection
# The 18 pin header on the board has Y5 and Y3 swapped
board = esp32cam_espressif_esp32s2_cam_board

[env:esp32cam_espressif_esp32s2_cam_header]
# Use header connection
# The 18 pin header on the board has Y5 and Y3 swapped
board = esp32cam_espressif_esp32s2_cam_header

[env:esp32cam_espressif_esp32s3_cam_lcd]
board = esp32cam_espressif_esp32s3_cam_lcd

[env:esp32cam_espressif_esp32s3_eye]
board = esp32cam_espressif_esp32s3_eye

[env:esp32cam_freenove_wrover_kit]
board = esp32cam_freenove_wrover_kit

[env:esp32cam_m5stack_camera_psram]
board = esp32cam_m5stack_camera_psram

[env:esp32cam_m5stack_camera]
board = esp32cam_m5stack_camera

[env:esp32cam_m5stack_esp32cam]
board = esp32cam_m5stack_esp32cam

[env:esp32cam_m5stack_unitcam]
board = esp32cam_m5stack_unitcam

[env:esp32cam_m5stack_unitcams3]
board = esp32cam_m5stack_unitcams3

[env:esp32cam_m5stack_wide]
board = esp32cam_m5stack_wide

[env:esp32cam_m5stack_m5poecam_w]
board = esp32cam_m5stack_m5poecam_w

[env:esp32cam_seeed_xiao_esp32s3_sense]
board = esp32cam_seeed_xiao_esp32s3_sense

[env:esp32cam_ttgo_t_camera]
board = esp32cam_ttgo_t_camera

[env:esp32cam_ttgo_t_journal]
board = esp32cam_ttgo_t_journal